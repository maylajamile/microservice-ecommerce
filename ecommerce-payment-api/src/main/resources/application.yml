server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/payment
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: select 1
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true
  cloud:
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: false
          configuration:
            schema.registry.url: http://localhost:8081
      function:
        definition: checkoutCreatedListener
      bindings:
        checkoutCreatedListener-in-0:
          destination: streaming.ecommerce.checkout.created
          content-type: application/*+avro
          group: ${spring.application.name}
          consumer:
            use-native-encoding: true
        checkoutCreatedListener-out-0:
          destination: streaming.ecommerce.payment.paid
          content-type: application/*+avro
          producer:
            use-native-decoding: true
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true